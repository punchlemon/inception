services:
  nginx:
    image: nginx
    build: ./requirements/nginx
    pull_policy: never
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - wp_data:/var/www/html
    depends_on:
      - wordpress
    networks:
      - inception
    restart: always
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}

  wordpress:
    image: wordpress
    build: ./requirements/wordpress
    pull_policy: never
    container_name: wordpress
    env_file: .env
    environment:
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ADMIN_USER=${MYSQL_ADMIN_USER}
      - MYSQL_ADMIN_PASSWORD=${MYSQL_ADMIN_PASSWORD}
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - wp_data:/var/www/html
    depends_on:
      - mariadb
    networks:
      - inception
    restart: always

  mariadb:
    image: mariadb
    build: ./requirements/mariadb
    pull_policy: never
    container_name: mariadb
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ADMIN_USER=${MYSQL_ADMIN_USER}
      - MYSQL_ADMIN_PASSWORD=${MYSQL_ADMIN_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - inception
    restart: always

networks:
  inception:
    driver: bridge

volumes:
  wp_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/wp
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/db

